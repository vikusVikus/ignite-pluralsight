package com.pluralsight.duckair.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Telemetry definition.
 * 
 * This file was generated by Ignite Web Console (03/21/2019, 13:45)
 **/
public class Telemetry implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for lastUpdate. */
    private Timestamp lastUpdate;

    /** Value for routeId. */
    private String routeId;

    /** Value for flightNumber. */
    private String flightNumber;

    /** Value for altitude. */
    private Integer altitude;

    /** Value for airspeed. */
    private Integer airspeed;

    /** Value for heading. */
    private Integer heading;

    /** Value for currentSegment. */
    private Integer currentSegment;

    /** Value for positionLatitude. */
    private BigDecimal positionLatitude;

    /** Value for positionLongitude. */
    private BigDecimal positionLongitude;

    /** Empty constructor. **/
    public Telemetry() {
        // No-op.
    }

    /** Full constructor. **/
    public Telemetry(Timestamp lastUpdate,
        String routeId,
        String flightNumber,
        Integer altitude,
        Integer airspeed,
        Integer heading,
        Integer currentSegment,
        BigDecimal positionLatitude,
        BigDecimal positionLongitude) {
        this.lastUpdate = lastUpdate;
        this.routeId = routeId;
        this.flightNumber = flightNumber;
        this.altitude = altitude;
        this.airspeed = airspeed;
        this.heading = heading;
        this.currentSegment = currentSegment;
        this.positionLatitude = positionLatitude;
        this.positionLongitude = positionLongitude;
    }

    /**
     * Gets lastUpdate
     * 
     * @return Value for lastUpdate.
     **/
    public Timestamp getLastUpdate() {
        return lastUpdate;
    }

    /**
     * Sets lastUpdate
     * 
     * @param lastUpdate New value for lastUpdate.
     **/
    public void setLastUpdate(Timestamp lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     * Gets routeId
     * 
     * @return Value for routeId.
     **/
    public String getRouteId() {
        return routeId;
    }

    /**
     * Sets routeId
     * 
     * @param routeId New value for routeId.
     **/
    public void setRouteId(String routeId) {
        this.routeId = routeId;
    }

    /**
     * Gets flightNumber
     * 
     * @return Value for flightNumber.
     **/
    public String getFlightNumber() {
        return flightNumber;
    }

    /**
     * Sets flightNumber
     * 
     * @param flightNumber New value for flightNumber.
     **/
    public void setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
    }

    /**
     * Gets altitude
     * 
     * @return Value for altitude.
     **/
    public Integer getAltitude() {
        return altitude;
    }

    /**
     * Sets altitude
     * 
     * @param altitude New value for altitude.
     **/
    public void setAltitude(Integer altitude) {
        this.altitude = altitude;
    }

    /**
     * Gets airspeed
     * 
     * @return Value for airspeed.
     **/
    public Integer getAirspeed() {
        return airspeed;
    }

    /**
     * Sets airspeed
     * 
     * @param airspeed New value for airspeed.
     **/
    public void setAirspeed(Integer airspeed) {
        this.airspeed = airspeed;
    }

    /**
     * Gets heading
     * 
     * @return Value for heading.
     **/
    public Integer getHeading() {
        return heading;
    }

    /**
     * Sets heading
     * 
     * @param heading New value for heading.
     **/
    public void setHeading(Integer heading) {
        this.heading = heading;
    }

    /**
     * Gets currentSegment
     * 
     * @return Value for currentSegment.
     **/
    public Integer getCurrentSegment() {
        return currentSegment;
    }

    /**
     * Sets currentSegment
     * 
     * @param currentSegment New value for currentSegment.
     **/
    public void setCurrentSegment(Integer currentSegment) {
        this.currentSegment = currentSegment;
    }

    /**
     * Gets positionLatitude
     * 
     * @return Value for positionLatitude.
     **/
    public BigDecimal getPositionLatitude() {
        return positionLatitude;
    }

    /**
     * Sets positionLatitude
     * 
     * @param positionLatitude New value for positionLatitude.
     **/
    public void setPositionLatitude(BigDecimal positionLatitude) {
        this.positionLatitude = positionLatitude;
    }

    /**
     * Gets positionLongitude
     * 
     * @return Value for positionLongitude.
     **/
    public BigDecimal getPositionLongitude() {
        return positionLongitude;
    }

    /**
     * Sets positionLongitude
     * 
     * @param positionLongitude New value for positionLongitude.
     **/
    public void setPositionLongitude(BigDecimal positionLongitude) {
        this.positionLongitude = positionLongitude;
    }

    /** {@inheritDoc} **/
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;
        
        if (!(o instanceof Telemetry))
            return false;
        
        Telemetry that = (Telemetry)o;

        if (lastUpdate != null ? !lastUpdate.equals(that.lastUpdate) : that.lastUpdate != null)
            return false;
        

        if (routeId != null ? !routeId.equals(that.routeId) : that.routeId != null)
            return false;
        

        if (flightNumber != null ? !flightNumber.equals(that.flightNumber) : that.flightNumber != null)
            return false;
        

        if (altitude != null ? !altitude.equals(that.altitude) : that.altitude != null)
            return false;
        

        if (airspeed != null ? !airspeed.equals(that.airspeed) : that.airspeed != null)
            return false;
        

        if (heading != null ? !heading.equals(that.heading) : that.heading != null)
            return false;
        

        if (currentSegment != null ? !currentSegment.equals(that.currentSegment) : that.currentSegment != null)
            return false;
        

        if (positionLatitude != null ? !positionLatitude.equals(that.positionLatitude) : that.positionLatitude != null)
            return false;
        

        if (positionLongitude != null ? !positionLongitude.equals(that.positionLongitude) : that.positionLongitude != null)
            return false;
        
        return true;
    }

    /** {@inheritDoc} **/
    @Override public int hashCode() {
        int res = lastUpdate != null ? lastUpdate.hashCode() : 0;

        res = 31 * res + (routeId != null ? routeId.hashCode() : 0);

        res = 31 * res + (flightNumber != null ? flightNumber.hashCode() : 0);

        res = 31 * res + (altitude != null ? altitude.hashCode() : 0);

        res = 31 * res + (airspeed != null ? airspeed.hashCode() : 0);

        res = 31 * res + (heading != null ? heading.hashCode() : 0);

        res = 31 * res + (currentSegment != null ? currentSegment.hashCode() : 0);

        res = 31 * res + (positionLatitude != null ? positionLatitude.hashCode() : 0);

        res = 31 * res + (positionLongitude != null ? positionLongitude.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} **/
    @Override public String toString() {
        return "Telemetry [" + 
            "lastUpdate=" + lastUpdate + ", " + 
            "routeId=" + routeId + ", " + 
            "flightNumber=" + flightNumber + ", " + 
            "altitude=" + altitude + ", " + 
            "airspeed=" + airspeed + ", " + 
            "heading=" + heading + ", " + 
            "currentSegment=" + currentSegment + ", " + 
            "positionLatitude=" + positionLatitude + ", " + 
            "positionLongitude=" + positionLongitude +
        "]";
    }
}