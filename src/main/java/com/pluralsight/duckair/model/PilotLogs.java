package com.pluralsight.duckair.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Date;

/**
 * PilotLogs definition.
 * 
 * This file was generated by Ignite Web Console (03/21/2019, 13:45)
 **/
public class PilotLogs implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for crewId. */
    private String crewId;

    /** Value for fleetId. */
    private String fleetId;

    /** Value for flightDate. */
    private Date flightDate;

    /** Value for origin. */
    private String origin;

    /** Value for destination. */
    private String destination;

    /** Value for duration. */
    private String duration;

    /** Value for landingsDay. */
    private String landingsDay;

    /** Value for landingsNight. */
    private BigDecimal landingsNight;

    /** Value for hoursDay. */
    private BigDecimal hoursDay;

    /** Value for hoursNight. */
    private BigDecimal hoursNight;

    /** Value for actualInstrument. */
    private BigDecimal actualInstrument;

    /** Value for approachCount. */
    private String approachCount;

    /** Value for approachType. */
    private String approachType;

    /** Value for simulatorHours. */
    private Integer simulatorHours;

    /** Value for crossCountryHours. */
    private BigDecimal crossCountryHours;

    /** Value for solo. */
    private Integer solo;

    /** Value for pilotInCommandHours. */
    private BigDecimal pilotInCommandHours;

    /** Value for secondInCommandHours. */
    private BigDecimal secondInCommandHours;

    /** Value for remarks. */
    private String remarks;

    /** Empty constructor. **/
    public PilotLogs() {
        // No-op.
    }

    /** Full constructor. **/
    public PilotLogs(String crewId,
        String fleetId,
        Date flightDate,
        String origin,
        String destination,
        String duration,
        String landingsDay,
        BigDecimal landingsNight,
        BigDecimal hoursDay,
        BigDecimal hoursNight,
        BigDecimal actualInstrument,
        String approachCount,
        String approachType,
        Integer simulatorHours,
        BigDecimal crossCountryHours,
        Integer solo,
        BigDecimal pilotInCommandHours,
        BigDecimal secondInCommandHours,
        String remarks) {
        this.crewId = crewId;
        this.fleetId = fleetId;
        this.flightDate = flightDate;
        this.origin = origin;
        this.destination = destination;
        this.duration = duration;
        this.landingsDay = landingsDay;
        this.landingsNight = landingsNight;
        this.hoursDay = hoursDay;
        this.hoursNight = hoursNight;
        this.actualInstrument = actualInstrument;
        this.approachCount = approachCount;
        this.approachType = approachType;
        this.simulatorHours = simulatorHours;
        this.crossCountryHours = crossCountryHours;
        this.solo = solo;
        this.pilotInCommandHours = pilotInCommandHours;
        this.secondInCommandHours = secondInCommandHours;
        this.remarks = remarks;
    }

    /**
     * Gets crewId
     * 
     * @return Value for crewId.
     **/
    public String getCrewId() {
        return crewId;
    }

    /**
     * Sets crewId
     * 
     * @param crewId New value for crewId.
     **/
    public void setCrewId(String crewId) {
        this.crewId = crewId;
    }

    /**
     * Gets fleetId
     * 
     * @return Value for fleetId.
     **/
    public String getFleetId() {
        return fleetId;
    }

    /**
     * Sets fleetId
     * 
     * @param fleetId New value for fleetId.
     **/
    public void setFleetId(String fleetId) {
        this.fleetId = fleetId;
    }

    /**
     * Gets flightDate
     * 
     * @return Value for flightDate.
     **/
    public Date getFlightDate() {
        return flightDate;
    }

    /**
     * Sets flightDate
     * 
     * @param flightDate New value for flightDate.
     **/
    public void setFlightDate(Date flightDate) {
        this.flightDate = flightDate;
    }

    /**
     * Gets origin
     * 
     * @return Value for origin.
     **/
    public String getOrigin() {
        return origin;
    }

    /**
     * Sets origin
     * 
     * @param origin New value for origin.
     **/
    public void setOrigin(String origin) {
        this.origin = origin;
    }

    /**
     * Gets destination
     * 
     * @return Value for destination.
     **/
    public String getDestination() {
        return destination;
    }

    /**
     * Sets destination
     * 
     * @param destination New value for destination.
     **/
    public void setDestination(String destination) {
        this.destination = destination;
    }

    /**
     * Gets duration
     * 
     * @return Value for duration.
     **/
    public String getDuration() {
        return duration;
    }

    /**
     * Sets duration
     * 
     * @param duration New value for duration.
     **/
    public void setDuration(String duration) {
        this.duration = duration;
    }

    /**
     * Gets landingsDay
     * 
     * @return Value for landingsDay.
     **/
    public String getLandingsDay() {
        return landingsDay;
    }

    /**
     * Sets landingsDay
     * 
     * @param landingsDay New value for landingsDay.
     **/
    public void setLandingsDay(String landingsDay) {
        this.landingsDay = landingsDay;
    }

    /**
     * Gets landingsNight
     * 
     * @return Value for landingsNight.
     **/
    public BigDecimal getLandingsNight() {
        return landingsNight;
    }

    /**
     * Sets landingsNight
     * 
     * @param landingsNight New value for landingsNight.
     **/
    public void setLandingsNight(BigDecimal landingsNight) {
        this.landingsNight = landingsNight;
    }

    /**
     * Gets hoursDay
     * 
     * @return Value for hoursDay.
     **/
    public BigDecimal getHoursDay() {
        return hoursDay;
    }

    /**
     * Sets hoursDay
     * 
     * @param hoursDay New value for hoursDay.
     **/
    public void setHoursDay(BigDecimal hoursDay) {
        this.hoursDay = hoursDay;
    }

    /**
     * Gets hoursNight
     * 
     * @return Value for hoursNight.
     **/
    public BigDecimal getHoursNight() {
        return hoursNight;
    }

    /**
     * Sets hoursNight
     * 
     * @param hoursNight New value for hoursNight.
     **/
    public void setHoursNight(BigDecimal hoursNight) {
        this.hoursNight = hoursNight;
    }

    /**
     * Gets actualInstrument
     * 
     * @return Value for actualInstrument.
     **/
    public BigDecimal getActualInstrument() {
        return actualInstrument;
    }

    /**
     * Sets actualInstrument
     * 
     * @param actualInstrument New value for actualInstrument.
     **/
    public void setActualInstrument(BigDecimal actualInstrument) {
        this.actualInstrument = actualInstrument;
    }

    /**
     * Gets approachCount
     * 
     * @return Value for approachCount.
     **/
    public String getApproachCount() {
        return approachCount;
    }

    /**
     * Sets approachCount
     * 
     * @param approachCount New value for approachCount.
     **/
    public void setApproachCount(String approachCount) {
        this.approachCount = approachCount;
    }

    /**
     * Gets approachType
     * 
     * @return Value for approachType.
     **/
    public String getApproachType() {
        return approachType;
    }

    /**
     * Sets approachType
     * 
     * @param approachType New value for approachType.
     **/
    public void setApproachType(String approachType) {
        this.approachType = approachType;
    }

    /**
     * Gets simulatorHours
     * 
     * @return Value for simulatorHours.
     **/
    public Integer getSimulatorHours() {
        return simulatorHours;
    }

    /**
     * Sets simulatorHours
     * 
     * @param simulatorHours New value for simulatorHours.
     **/
    public void setSimulatorHours(Integer simulatorHours) {
        this.simulatorHours = simulatorHours;
    }

    /**
     * Gets crossCountryHours
     * 
     * @return Value for crossCountryHours.
     **/
    public BigDecimal getCrossCountryHours() {
        return crossCountryHours;
    }

    /**
     * Sets crossCountryHours
     * 
     * @param crossCountryHours New value for crossCountryHours.
     **/
    public void setCrossCountryHours(BigDecimal crossCountryHours) {
        this.crossCountryHours = crossCountryHours;
    }

    /**
     * Gets solo
     * 
     * @return Value for solo.
     **/
    public Integer getSolo() {
        return solo;
    }

    /**
     * Sets solo
     * 
     * @param solo New value for solo.
     **/
    public void setSolo(Integer solo) {
        this.solo = solo;
    }

    /**
     * Gets pilotInCommandHours
     * 
     * @return Value for pilotInCommandHours.
     **/
    public BigDecimal getPilotInCommandHours() {
        return pilotInCommandHours;
    }

    /**
     * Sets pilotInCommandHours
     * 
     * @param pilotInCommandHours New value for pilotInCommandHours.
     **/
    public void setPilotInCommandHours(BigDecimal pilotInCommandHours) {
        this.pilotInCommandHours = pilotInCommandHours;
    }

    /**
     * Gets secondInCommandHours
     * 
     * @return Value for secondInCommandHours.
     **/
    public BigDecimal getSecondInCommandHours() {
        return secondInCommandHours;
    }

    /**
     * Sets secondInCommandHours
     * 
     * @param secondInCommandHours New value for secondInCommandHours.
     **/
    public void setSecondInCommandHours(BigDecimal secondInCommandHours) {
        this.secondInCommandHours = secondInCommandHours;
    }

    /**
     * Gets remarks
     * 
     * @return Value for remarks.
     **/
    public String getRemarks() {
        return remarks;
    }

    /**
     * Sets remarks
     * 
     * @param remarks New value for remarks.
     **/
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    /** {@inheritDoc} **/
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;
        
        if (!(o instanceof PilotLogs))
            return false;
        
        PilotLogs that = (PilotLogs)o;

        if (crewId != null ? !crewId.equals(that.crewId) : that.crewId != null)
            return false;
        

        if (fleetId != null ? !fleetId.equals(that.fleetId) : that.fleetId != null)
            return false;
        

        if (flightDate != null ? !flightDate.equals(that.flightDate) : that.flightDate != null)
            return false;
        

        if (origin != null ? !origin.equals(that.origin) : that.origin != null)
            return false;
        

        if (destination != null ? !destination.equals(that.destination) : that.destination != null)
            return false;
        

        if (duration != null ? !duration.equals(that.duration) : that.duration != null)
            return false;
        

        if (landingsDay != null ? !landingsDay.equals(that.landingsDay) : that.landingsDay != null)
            return false;
        

        if (landingsNight != null ? !landingsNight.equals(that.landingsNight) : that.landingsNight != null)
            return false;
        

        if (hoursDay != null ? !hoursDay.equals(that.hoursDay) : that.hoursDay != null)
            return false;
        

        if (hoursNight != null ? !hoursNight.equals(that.hoursNight) : that.hoursNight != null)
            return false;
        

        if (actualInstrument != null ? !actualInstrument.equals(that.actualInstrument) : that.actualInstrument != null)
            return false;
        

        if (approachCount != null ? !approachCount.equals(that.approachCount) : that.approachCount != null)
            return false;
        

        if (approachType != null ? !approachType.equals(that.approachType) : that.approachType != null)
            return false;
        

        if (simulatorHours != null ? !simulatorHours.equals(that.simulatorHours) : that.simulatorHours != null)
            return false;
        

        if (crossCountryHours != null ? !crossCountryHours.equals(that.crossCountryHours) : that.crossCountryHours != null)
            return false;
        

        if (solo != null ? !solo.equals(that.solo) : that.solo != null)
            return false;
        

        if (pilotInCommandHours != null ? !pilotInCommandHours.equals(that.pilotInCommandHours) : that.pilotInCommandHours != null)
            return false;
        

        if (secondInCommandHours != null ? !secondInCommandHours.equals(that.secondInCommandHours) : that.secondInCommandHours != null)
            return false;
        

        if (remarks != null ? !remarks.equals(that.remarks) : that.remarks != null)
            return false;
        
        return true;
    }

    /** {@inheritDoc} **/
    @Override public int hashCode() {
        int res = crewId != null ? crewId.hashCode() : 0;

        res = 31 * res + (fleetId != null ? fleetId.hashCode() : 0);

        res = 31 * res + (flightDate != null ? flightDate.hashCode() : 0);

        res = 31 * res + (origin != null ? origin.hashCode() : 0);

        res = 31 * res + (destination != null ? destination.hashCode() : 0);

        res = 31 * res + (duration != null ? duration.hashCode() : 0);

        res = 31 * res + (landingsDay != null ? landingsDay.hashCode() : 0);

        res = 31 * res + (landingsNight != null ? landingsNight.hashCode() : 0);

        res = 31 * res + (hoursDay != null ? hoursDay.hashCode() : 0);

        res = 31 * res + (hoursNight != null ? hoursNight.hashCode() : 0);

        res = 31 * res + (actualInstrument != null ? actualInstrument.hashCode() : 0);

        res = 31 * res + (approachCount != null ? approachCount.hashCode() : 0);

        res = 31 * res + (approachType != null ? approachType.hashCode() : 0);

        res = 31 * res + (simulatorHours != null ? simulatorHours.hashCode() : 0);

        res = 31 * res + (crossCountryHours != null ? crossCountryHours.hashCode() : 0);

        res = 31 * res + (solo != null ? solo.hashCode() : 0);

        res = 31 * res + (pilotInCommandHours != null ? pilotInCommandHours.hashCode() : 0);

        res = 31 * res + (secondInCommandHours != null ? secondInCommandHours.hashCode() : 0);

        res = 31 * res + (remarks != null ? remarks.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} **/
    @Override public String toString() {
        return "PilotLogs [" + 
            "crewId=" + crewId + ", " + 
            "fleetId=" + fleetId + ", " + 
            "flightDate=" + flightDate + ", " + 
            "origin=" + origin + ", " + 
            "destination=" + destination + ", " + 
            "duration=" + duration + ", " + 
            "landingsDay=" + landingsDay + ", " + 
            "landingsNight=" + landingsNight + ", " + 
            "hoursDay=" + hoursDay + ", " + 
            "hoursNight=" + hoursNight + ", " + 
            "actualInstrument=" + actualInstrument + ", " + 
            "approachCount=" + approachCount + ", " + 
            "approachType=" + approachType + ", " + 
            "simulatorHours=" + simulatorHours + ", " + 
            "crossCountryHours=" + crossCountryHours + ", " + 
            "solo=" + solo + ", " + 
            "pilotInCommandHours=" + pilotInCommandHours + ", " + 
            "secondInCommandHours=" + secondInCommandHours + ", " + 
            "remarks=" + remarks +
        "]";
    }
}